#
# This is a Shiny web application. You can run the application by clicking
# the 'Run App' button above.
#
# Find out more about building applications with Shiny here:
#
#    http://shiny.rstudio.com/
#

library(shiny)
library(shinydashboard)
library(AlgDesign)
library(googlesheets4)
library(rlang)
library(curl)
library(openssl)
library(hms)
library(googledrive)
library(googleAuthR)
library(dplyr)
library(tidyr)
library(DoE.base)
library(support.CEs)
library(shinyjs)
library(flextable)
library(DoE.wrapper)
library(shinyalert)

withBusyIndicatorCSS <- "
.btn-loading-container {
margin-left: 10px;
font-size: 1.2em;
}
.btn-done-indicator {
color: green;
}
.btn-err {
margin-top: 10px;
color: red;
}
"

withBusyIndicatorUI <- function(button) {
  id <- button[['attribs']][['id']]
  div(
    shinyjs::useShinyjs(),
    singleton(tags$head(
      tags$style(withBusyIndicatorCSS)
    )),
    `data-for-btn` = id,
    button,
    span(
      class = "btn-loading-container",
      shinyjs::hidden(
        icon("spinner", class = "btn-loading-indicator fa-spin"),
        icon("check", class = "btn-done-indicator")
      )
    ),
    shinyjs::hidden(
      div(class = "btn-err",
          div(icon("exclamation-circle"),
              tags$b("Error: "),
              span(class = "btn-err-msg")
          )
      )
    )
  )
}

# Call this function from the server with the button id that is clicked and the
# expression to run when the button is clicked
withBusyIndicatorServer <- function(buttonId, expr) {
  # UX stuff: show the "busy" message, hide the other messages, disable the button
  loadingEl <- sprintf("[data-for-btn=%s] .btn-loading-indicator", buttonId)
  doneEl <- sprintf("[data-for-btn=%s] .btn-done-indicator", buttonId)
  errEl <- sprintf("[data-for-btn=%s] .btn-err", buttonId)
  shinyjs::disable(buttonId)
  shinyjs::show(selector = loadingEl)
  shinyjs::hide(selector = doneEl)
  shinyjs::hide(selector = errEl)
  on.exit({
    shinyjs::enable(buttonId)
    shinyjs::hide(selector = loadingEl)
  })
  
  # Try to run the code when the button is clicked and show an error message if
  # an error occurs or a success message if it completes
  tryCatch({
    value <- expr
    shinyjs::show(selector = doneEl)
    shinyjs::delay(2000, shinyjs::hide(selector = doneEl, anim = TRUE, animType = "fade",
                                       time = 0.5))
    value
  }, error = function(err) { errorFunc(err, buttonId) })
}

# When an error happens after a button click, show the error
errorFunc <- function(err, buttonId) {
  errEl <- sprintf("[data-for-btn=%s] .btn-err", buttonId)
  errElMsg <- sprintf("[data-for-btn=%s] .btn-err-msg", buttonId)
  errMessage <- gsub("^ddpcr: (.*)", "\\1", err$message)
  shinyjs::html(html = errMessage, selector = errElMsg)
  shinyjs::show(selector = errEl, anim = TRUE, animType = "fade")
}

# Define UI 
ui <- dashboardPage(
  
  dashboardHeader(title = "Preference Elicitation on 2020 DNC Decarbonization Policy"),
  dashboardSidebar(
    sidebarMenu(id = "sidetabs",
      menuItem("Consent Form", tabName = "consent", icon = icon("check-square")),
      # menuItem("Introduction", tabName = "instructions", icon = icon("briefcase")),
      # menuItem("Instructions", tabName = "ins", icon = icon("bars")),
      # menuItem("Pairwise Comparisons", tabName = "pairwise", icon = icon("chalkboard"))
      menuItemOutput("all.menu")
    )
    
  ),
  dashboardBody(
    useShinyjs(),
    tags$head(tags$style(".shiny-notification {height: 100px; width: 100%; position: fixed; 
                         right: 0; bottom: 0; border: 3px solid #73AD21; font-size: 26px;}")),
    tabItems(
      tabItem(
        tabName = "consent",
        h2("Consent Form"),
        fluidRow(
          box(
            title = "Consent Form", solidHeader = TRUE, width = 12,
            h3("Please read the consent form below carefully and answer the three questions at the end of the form and click on the submit button. 
               Your consent will only be considered as given if you answer Yes to all three questions. 
               If you do not answer Yes to all three questions, the browser will close once you click on the submit button.
               However if you give consent to the study, please navigate to the Introductions tab by either clicking on the link below the Submit button or clicking on the Introductions tab on the side menu."),
            tags$br(),
            "This task is part of a research study conducted by Niles Guo at Carnegie Mellon University and is funded by CMU’s Scott Institute.",
            tags$br(),
            tags$br(),
            tags$b("Principal Investigator:"), "Niles Xunan Guo, PhD Student in Engineering and Public Policy", tags$br(),
            "Engineering and Public Policy, 5000 Forbes Ave, Baker Hall 129, Pittsburgh, PA, 15213", tags$br(),
            "Phone: 206-495-1364", tags$br(),
            "Email: nilesxug@andrew.cmu.edu", tags$br(),
            tags$br(),
            tags$b("Faculty Adviser: "), "Dr. Alex Davis, Assistant Professor in Engineering and Public Policy", tags$br(),
            "Email: ald1@andrew.cmu.edu", tags$br(),
            h3("Purpose"), 
            "The purpose of the research is to understand and improve the negotiation process of a group of individual decision-makers when 
            faced with a public decision (voting on a policy for example). 
            Specifically, the study will evaluate different ways group welfare functions can be modeled in order to best fit the society’s values.",
            tags$br(),
            h3("Summary"),
            "As a participant, we will ask you to evaluate potential climate change/energy policy proposed by the 2020 Democratic Party Presidential candidates. Based on your response, we might invite you on campus to participate in an in-person activity to negotiate your preferred climate change/energy policy. Subject area knowledge is not required.",
            tags$br(),
            h3("Procedure"),
            "There are two stages to this study. In the first stage, you will be asked to complete a survey of 44 questions, each with two options. You will be asked to select one of the two options. Including reading the instructions, this will take 15-30 minutes to complete. Based on your responses to the questions in stage 1, we will select a subset of participants to participate in stage 2 of the study. You will be provided with details of stage 2 if you are selected for it, and you will be provided with a separate consent form in person during stage 2.",
            tags$br(),
            h3("Participant Requirements"),
            "Participation in this study is limited to individuals age 18 and older and who are conversational in English.",
            tags$br(),
            h3("Risks"),
            "For the first stage, the risks and discomfort associated with participation in this study are no greater than those ordinarily encountered in daily life or during other online activities. There is a potential risk of breach of confidentiality.",
            tags$br(),
            h3("Benefits"),
            "There may be no personal benefit from your participation in the study but the knowledge received may be of value to humanity.",
            tags$br(),
            h3("Compensation & Costs"),
            "As a participant, you will be entered into a draw to win one (1) of five (5) $50 Amazon Gift Cards. In addition, if you are selected to participate in the second round of the study, you will be compensated with $10 for participating. There will be no cost to you if you participate in this study.",
            tags$br(),
            h3("Future Use of Information"),
            "In the future, once we have removed all identifiable information from your data, we may use the data for our future research studies, or we may distribute the data to other researchers for their research studies.  We would do this without getting additional informed consent from you (or your legally authorized representative).  Sharing of data with other researchers will only be done in such a manner that you will not be identified.",
            tags$br(),
            h3("Confidentiality"),
            "By participating in this research, you understand and agree that Carnegie Mellon may be required to disclose your consent form, data and other personally identifiable information as required by law, regulation, subpoena or court order.  Otherwise, your confidentiality will be maintained in the following manner:",
            tags$br(),
            tags$br(),
            "Your data and consent form will be kept separate. Your consent form will be stored in a secure location on Carnegie Mellon property and will not be disclosed to third parties. By participating, you understand and agree that the data and information gathered during this study may be used by Carnegie Mellon and published and/or disclosed by Carnegie Mellon to others outside of Carnegie Mellon.  However, your name, address, contact information and other direct personal identifiers will not be mentioned in any such publication or dissemination of the research data and/or results by Carnegie Mellon. Note that per regulation all research data must be kept for a minimum of 3 years.", 
            tags$br(),
            tags$br(),
            "The researchers will take the following steps to protect participants’ identities during this study: (1) Each participant will be assigned a number; (2) The researchers will record any data collected during the study by that number, not by name; (3) Any original data files will be stored in a secured location accessed only by authorized researchers.",
            tags$br(),
            h3("Right to Ask Questions & Contact Information"),
            "If you have any questions about this study, you should feel free to ask them by contacting the Principal Investigator, Niles Guo, PhD Student, Engineering and Public Policy, 5000 Forbes Ave, Baker Hall 129, Pittsburgh, PA, 15213, nilesxug@andrew.cmu.edu. If you have questions later, desire additional information, or wish to withdraw your participation please contact the Principal Investigator by mail, phone or e-mail in accordance with the contact information listed above.",
            tags$br(),
            tags$br(),
            "If you have questions pertaining to your rights as a research participant; or to report concerns about this study, you should contact the Office of Research Integrity and Compliance at Carnegie Mellon University.  Email: irb-review@andrew.cmu.edu . Phone: 412-268-1901 or 412-268-5460.",
            tags$br(),
            h3("Voluntary Participation"),
            "Your participation in this research is voluntary.  You may discontinue participation at any time during the research activity.  You may print a copy of this consent form for your records.",
            tags$br(),
            tags$br(),
            selectInput("plus18","I am age 18 and older", c("Yes", "No")),
            tags$br(),
            selectInput("understand", "I have read and understand the information above", c("Yes" = "Yes", "No" = "No")),
            tags$br(),
            selectInput("wishPart", "I want to participate in this research and continue with the activity", c("Yes" = "Yes", "No" = "No")),
            tags$br(),
            actionButton("submitConsent", "Submit Consent Form"),
            tags$br(),
            tags$br(),
            textOutput("consentOutputMessage"),
            tags$br(),
            uiOutput("linkOutput")
            
          )
        )
      ),
      tabItem(tabName = "instructions",
              h2("Introduction"),
              fluidRow(
                box(
                  title = "Introductions", solidHeader = TRUE, width = 12,
                  
                  "Please enter your study participant ID in the SONA system , then answer the following questions before clicking on Submit. Your SONA ID is the username you used to log into the CBDR website. Once you see the confirmation message below the submit button that the form is ready, you may move to the ", tags$b("Instructions"), "tab.",
                  
                  tags$br(),
                  tags$br(),
                  
                  textInput("IDInput", "Your Study ID", width = 120),
                  
                  tags$br(),
                  selectInput("dncVote", "Do you plan on voting in the 2020 Democratic Party Primary?", choices = c("Yes" = "1",
                                                                                                                    "No" = "2",
                                                                                                                    "Undecided" = "3"), width =500),
                  tags$br(),
                  disabled(withBusyIndicatorUI(actionButton("submitButton", "Submit", width = 120, class = "btn-primary"))),
                  
                  tags$br(),
                  
                  verbatimTextOutput("result.text"),
                  
                  tags$br()
                )
              )
      ),
      tabItem(tabName = "ins",
              h2("Instructions"),
              fluidRow(
                box(
                  title = "Instructions", solidHeader = TRUE, width = 12,
                  
                  "In this exercise, you will be asked to choose between two proposed climate change policies inpired by the 2020 Democratic Party Presidential candidates. You will be asked to evaluate each policy on the characteristics listed below. Description of the characteristics and the different levels can also be found in the table. Once you finish reading this page, please go to the Pairwise Comparison to start the survey. However, feel free to return to this page at any time. Your responses in the survey will be kept as long as you do not close the browser window.",
                  tags$br(),
                  tags$br(),
                  "You will be asked to choose between two alternatives: A and B. 
                  The two alternatives will have different values for some of the characteristics (though not all of them). 
                  Please use the drop-down menu on the right of each question to select the alternative that you support the most. 
                  You must select an alternative for each question. Once you finish all questions, click on Submit Your Answer. 
                  You will receive a message letting you know when it is safe to close the browser page. 
                  It is important to note that your responses here will determine whether you will be invited back for part 2 of the study, so it is crucial that you answer all questions with your undivided attention and with the best of your ability. 
                  It is also important to remember that there is no right answer and we want to understand what your true preferences are. ",
                  tags$br(),
                  tags$br(),
                  htmlOutput("inst"),
                  tags$br(),
                  tags$br(),
                  actionLink("link-comparison", a("Navigate to the survey", href = "#shiny-tab-pairwise", "data-toggle" = "tab"))
                )
              )
              
      ),  
      tabItem(tabName = "pairwise",
              h2("Pairwise Comparisons"),
              fluidRow(
                box(width = 12, 
                    "You will be asked to choose between two alternatives: A and B. The two alternatives will have different values for some of the attributes (though not all of them). 
                    Please use the drop-down menu on the right of each question to select the alternative that you support the most. 
                    You must select an alternative for each question. Once you finish all questions, click on Submit Your Answer. 
                    You will receive a message letting you know when it is safe to close the browser page. 
                    It is important to note that your responses here will determine whether you will be invited back for part 2 of the study, so it is crucial that you answer all questions with your undivided attention and with the best of your ability. 
                    It is also important to remember that there is no right answer and we want to understand what your true preferences are.",
                    
                    tags$br(),
                    
                    tags$b("Warning: Do not close your browser window immediately after clicking on the submit button. Please wait for a green checkmark to appear beside the button before you close the browser. Closing the browser prior to the green arrow may cause the system to not save your answers.")
                )
              ),
              
              lapply(1:44, function(i){
                a <- ifelse(i%%2 == 1, "navy", "light-blue")
                fluidRow(
                  box(width = 12, title = paste('Question', i, sep = " "), background = c(a), 
                      uiOutput(paste0("Question", i))))
                
              }),
              
              fluidRow(
                box(width = 12,
                    withBusyIndicatorUI(actionButton("comparisonSubmit", "Submit your answers", width = 300, class = "btn-primary"))
                    
                )
              ),
              tags$br(),
              tags$br(),
              "Please do not close the browser window before you see the green checkmark.
              Doing so might result in your results not being saved in the system.")
    )
  )
  
)

# Define server logic 
server <- function(input, output) {
  
  options(gargle_oauth_cache= ".secrets")
  gargle::gargle_oauth_cache()
  #IMPORTANT: UPDATE EMAIL TO YOUR GOOGLE ACCOUNT TO ENSURE YOU CAN ACCESS GOOGLE DRIVE USING YOUR OWN CREDENTIALS
  options(
    gargle_oauth_cache = ".secrets",
    gargle_oauth_email = "nilesguo@gmail.com"
  )
  #IMPORTANT: UPDATE EMAIL TO YOUR GOOGLE ACCOUNT TO ENSURE YOU CAN ACCESS GOOGLE DRIVE USING YOUR OWN CREDENTIALS
  drive_auth()
  drive_auth(email = "nilesguo@gmail.com")
  
  getPage <- function() {
    return(includeHTML("attributeTable.htm"))
  }
  
  output$inst <- renderUI({
    getPage()
  })
  
  #Register the googlesheet with R
  alternatives <- as_sheets_id("https://docs.google.com/spreadsheets/d/1Q5jqGBgnq-Dh3lJUZ8hpDjBYkXyKTMHNYNKOBZiHaIc/edit#gid=0")
  
  
  alt1 <- oa.design(factor.names =list(nuc.power =c("Keep current nuclear power plants but do not build any new plants.", 
                                                    "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.", 
                                                    "Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years."),
                                       CO2Price = c("0", "30", "60", "90", "120", "150"),
                                       ban.fuel.explore = c("Unregulated access to federal lands and waters for fossil fuel exploration.", 
                                                            "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.", 
                                                            "Fully ban fossil fuel exploration on public lands."),
                                       RFS = c("Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", 
                                               "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", 
                                               "Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid.")))
  
  alt.left <- Dopt.augment(alt1, m = 24)
  
  is.duplicate <- anyDuplicated(alt.left)
  
  while(is.duplicate > 0){
    
    alt.left <- alt.left[-c(is.duplicate),]
    
    alt.left.test1 <- Dopt.augment(alt1, m =1)
    appended <- alt.left.test1[19,]
    alt.left <- rbind(alt.left, appended)
    is.duplicate <- (anyDuplicated(alt.left))
  }
  
  alt.left.num <- alt.left%>%
    mutate(nuc.power = ifelse(nuc.power == "Keep current nuclear power plants but do not build any new plants.", 0, ifelse(
      nuc.power == "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.", 1, 2)
    ))%>%
    mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
      CO2Price == "30", 1, ifelse(
        CO2Price == "60", 2, ifelse(
          CO2Price =="90", 3, ifelse(
            CO2Price == "120", 4, 5
          )
        )
      ) 
    )))%>%
    mutate(ban.fuel.explore = ifelse(ban.fuel.explore == "Unregulated access to federal lands and waters for fossil fuel exploration.", 0, ifelse(
      ban.fuel.explore == "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.", 1, 2
    )))%>%
    mutate(RFS = ifelse(RFS == "Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", 0, ifelse(
      RFS == "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", 1, 2)))
  
  alt.right.num <- alt.left.num%>%
    mutate(nuc.power = (nuc.power + 1)%%3)%>%
    mutate(CO2Price = (CO2Price + 1)%% 6)%>%
    mutate(ban.fuel.explore = (ban.fuel.explore + 1)%%3)%>%
    mutate(RFS = (RFS + 1)%%3)
  
  check.result <- sample(1:42, 2)
  alt.left.num <- rbind(alt.left.num, alt.right.num[check.result[1],])%>%
    rbind(alt.right.num[check.result[2],])
  
  alt.right.num <- rbind(alt.right.num, alt.left.num[check.result[1],])%>%
    rbind(alt.left.num[check.result[2],])
    
  alt.right <- alt.right.num%>%
   mutate(nuc.power = ifelse(nuc.power == "0", "Keep current nuclear power plants but do not build any new plants.", 
                             ifelse(nuc.power == "1", "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.",
                                    "Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years.")))%>%
   mutate(CO2Price = ifelse(CO2Price == "1", "30", ifelse(
     CO2Price == "2", "60", ifelse(
       CO2Price == "3", "90", ifelse(
         CO2Price == "4", "120", ifelse(
           CO2Price == "5", "150", "0"
         )
       )
     )
   )))%>%
    mutate(ban.fuel.explore = ifelse(ban.fuel.explore == "0", "Unregulated access to federal lands and waters for fossil fuel exploration.", ifelse(
      ban.fuel.explore == "1", "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.",
      "Fully ban fossil fuel exploration on public lands."
    )))%>%
    mutate(RFS = ifelse(RFS == "0", "Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", ifelse(
      RFS == "1", "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", "Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid."
    )))
  
  alt.left <- alt.left.num%>%
    mutate(nuc.power = ifelse(nuc.power == "0", "Keep current nuclear power plants but do not build any new plants.", 
                              ifelse(nuc.power == "1", "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.",
                                     "Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years.")))%>%
    mutate(CO2Price = ifelse(CO2Price == "1", "30", ifelse(
      CO2Price == "2", "60", ifelse(
        CO2Price == "3", "90", ifelse(
          CO2Price == "4", "120", ifelse(
            CO2Price == "5", "150", "0"
          )
        )
      )
    )))%>%
    mutate(ban.fuel.explore = ifelse(ban.fuel.explore == "0", "Unregulated access to federal lands and waters for fossil fuel exploration.", ifelse(
      ban.fuel.explore == "1", "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.",
      "Fully ban fossil fuel exploration on public lands."
    )))%>%
    mutate(RFS = ifelse(RFS == "0", "Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", ifelse(
      RFS == "1", "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", "Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid."
    )))
    
  
  alt1_sort <- alt.left
  alt2_sort <- alt.right
  
  attribute.names <- c("Nuclear Power in the Power Grid", "Price on Carbon($/ton)", "Fossil Fuel Exploration Rules on Federal Land", "Clean Energy Standard Target")
  column.names <- c("Characteristics", "Alternative A", "Alternative B")
  attribute.explanation <- c(rep("Nuclear power is currently the largest source of carbon-neutral energy source for the nation. However, it faces an uncertain future due to questions about safety and nuclear waste. Candidates have expressed a wide range of ideas regarding nuclear power, ranging from keeping the status quo, providing financial incentives to construct new nuclear reactors, or aggressively retiring the existing fleet.", 3), 
                             rep("Setting a price on carbon would create a mechanism where polluters would pay for carbon emissions released into the air. Economists view carbon price as a cost effective strategy to reduce carbon emissions, but it could increase energy prices for consumers in the country. A higher carbon price could lead to higher household utility bills and gasoline prices. Candidates have proposed a wide range of carbon price, from $0 per ton to $150 per ton of CO2e.", 6),
                             rep("A significant amount of the nation's fossil fuel is produced on federal lands and waters, and candidates have expressed different ideas on how fossil fuel from there should be extracted and produced. Some have called for a full ban on fossil fuel exploration on these lands and waters, while others have called for tighter regulations such as the reintroduction of the 2015 executive order that increased hydraulic fracturing operation storage standards and transparency of chemicals used. Some candidates believe fossil fuel exploration on public lands helps to lower energy costs and improves the energy security of the country and have proposed no change to the status quo.", 3),
                             rep("Many candidates have proposed a clean energy standard at the federal level which supersedes any existing state clean energy portfolios. A clean energy standard specifies the percentage of electricity that must be generated using an approved clean energy sources such as solar, wind, hydro, or nuclear. Since the United States electricity sector accounts for approximately 33% of the total U.S. greenhouse gas (GHG) emissions today, a clean energy standard will lower the overall GHG emitted by the nation. However, this will force many existing fossil fuel power plants to close and could increase household energy prices. Candidates have expressed a variety of targets, ranging from 100% clean energy by 2030 to 100% clean energy by 2100.", 3))

  observeEvent(input$submitConsent, {
    
    if(input$plus18 == "Yes" & input$understand == "Yes" & input$wishPart == "Yes"){
      
      output$all.menu <- renderMenu(
        sidebarMenu(id = "fulltabs",
          menuItem("Introduction", tabName = "instructions", icon = icon("briefcase")),
          menuItem("Instructions", tabName = "ins", icon = icon("bars")),
          menuItem("Pairwise Comparisons", tabName = "pairwise", icon = icon("chalkboard"))
        )
      )
      output$linkOutput <- renderUI(
        
        actionLink("link_instructions", a("Introductions", href = "#shiny-tab-instructions", "data-toggle" = "tab"))
      )
      output$consentOutputMessage <- renderText(
        
        "Your Consent Form has been submitted. Please click on the Introduction link below."
        
      )
      
    } else{
      
      stopApp()
      
    }
  

  })


  registered.sheet <- eventReactive(input$submitButton, ignoreNULL = TRUE, ignoreInit = FALSE, {
    
    
    withBusyIndicatorServer("submitButton", {
      
      withProgress(message = "Generating Form", detail = "part 0",
                   style ="notification", value = 0, {
                     progressCounter <- 1    
                     demographic.info <- c(input$dncVote, check.result[1], check.result[2], input$plus18, input$understand, input$wishPart)
                     incProgress(0.2, detail = paste("part", progressCounter))
                     progressCounter <- progressCounter + 1
                     id.sheet <- input$IDInput
                     incProgress(0.2, detail = paste("part", progressCounter))
                     id.same <- gs4_find(q=paste0("name='", id.sheet, "'"))
                     progressCounter <- progressCounter + 1
                     if (length(id.same$id) ==0){
                       progressCounter <- progressCounter + 1
                       user_alternatives <- gs4_create(name = input$IDInput, sheets = input$IDInput)
                       incProgress(0.2, detail = paste("part", progressCounter))
                       progressCounter <- progressCounter + 1
                       sheet_write(ss = user_alternatives, sheet  = "alt1", data = alt1_sort)
                       sheet_write(ss = user_alternatives, sheet = "alt2", data = alt2_sort)
                       sheet_add(ss = user_alternatives, sheet = "userresponse")
                       range_write(ss = user_alternatives, sheet = 1, data =  as.data.frame(demographic.info), range = "A1", col_names = FALSE)
                       incProgress(0.2, detail = paste("part", progressCounter))
                       progressCounter <- progressCounter + 1
                       user_alternatives

                       
                     }
                     
                     else {
                       progressCounter <- progressCounter + 1
                       a.register <- drive_get(as.character(input$IDInput))%>%
                         as_sheets_id()
                       incProgress(0.2, detail = paste("part", progressCounter))
                       progressCounter <- progressCounter + 1
                       sheet_write(ss = a.register, sheet = 1, as.data.frame(data = demographic.info))  
                       incProgress(0.2, detail = paste("part", progressCounter))
                       progressCounter <- progressCounter + 1
                       a.register
                      
                     }
        
      })
      
      
      
    })
  })
  
  observe({
    if(is.null(input$IDInput) || input$IDInput == "") {
      disable("submitButton")
    } else{
      enable("submitButton")
    }
  })
  
  
  output$result.text <- renderText({
    registered.sheet()
    
    "Your form is ready! Please navigate to the Instructions Tab."
  })
  
  
  
  lapply(1:44, function(i){
    output[[paste0("Question",i)]] <- renderUI({
      questions <- as.data.frame(cbind(attribute.names, t(alt.left[i,]), t(alt.right[i,])))
      names(questions) <- column.names
      fluidRow(
        column(8,
               renderTable(questions)),
        column(4,
               selectInput(paste0('Question', i), "Your Choice", 
                           c("\a",
                             "A" = "0",
                             "B" = "1"), width = 120))
      )
    })
  })  

  observeEvent(input$comparisonSubmit,{
    
    answers <- c(input$Question1, input$Question2, input$Question3, input$Question4, input$Question5, input$Question6,
                 input$Question7, input$Question8, input$Question9, input$Question10, input$Question11, input$Question12,
                 input$Question13, input$Question14, input$Question15, input$Question16, input$Question17, input$Question18,
                 input$Question19, input$Question20, input$Question21, input$Question22, input$Question23, input$Question24, 
                 input$Question25, input$Question26, input$Question27, input$Question28, input$Question29, input$Question30, input$Question31,
                 input$Question32, input$Question33, input$Question34, input$Question35, input$Question36, input$Question37, input$Question38,
                 input$Question39, input$Question40, input$Question41, input$Question42, input$Question43, input$Question44)
    
    showWarning <- c()
    
    for (answerCount in 1:44){
      
      showWarning[answerCount] <- ifelse(answers[answerCount] != "\a", 1, 0)
      
      
    }
    
    answers.needed <- which(showWarning %in% c(0))
    answer.pasted <- paste(unlist(answers.needed), collapse = ' ')

    if(min(showWarning) < 1){
      
      showModal(modalDialog(
        title = "Answers Missing",
        paste("You have not answered all the questions, please go back and make sure you have an answer for every question. You need to answer Question", answer.pasted, sep = " " )
      ))
      
    }else{
      
      withBusyIndicatorServer("comparisonSubmit", { 
        
        withProgress(message = "Submitting...", style = "notification", value = 0, {
          
          sheets.answer <- drive_get(as.character(input$IDInput))%>%
            as_sheets_id()
          range_write(ss = sheets.answer, sheet = "userresponse", data = as.data.frame(answers), range = "A2:46", col_names = FALSE)
          incProgress(1)
          
        })
        
      })
      
    }
    })
    
    
    
    
  
}

# Run the application 
shinyApp(ui = ui, server = server)

