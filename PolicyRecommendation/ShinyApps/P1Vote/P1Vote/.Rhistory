shiny::runApp()
gar_auth(email = "nilesguo@gmail.com",)
gar_auth(email = "nilesguo@gmail.com", scope = c("https://www.googleapis.com/auth/drive.file",
#                                         "https://www.googleapis.com/auth/drive",
#                                         "https://www.googleapis.com/auth/drive.readonly",
#                                         "https://www.googleapis.com/auth/spreadsheets.readonly",
#                                         "https://www.googleapis.com/auth/spreadsheets",
#                                         "https://www.googleapis.com/auth/xapi.zoo"))
)
)
gar_auth(email = "nilesguo@gmail.com", scope = c("https://www.googleapis.com/auth/spreadsheets", "https://www.googleapis.com/auth/drive"))
options(googleAuthR.scopes.selected = c("https://www.googleapis.com/auth/drive.file",
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/drive.readonly",
"https://www.googleapis.com/auth/spreadsheets.readonly",
"https://www.googleapis.com/auth/spreadsheets",
"https://www.googleapis.com/auth/xapi.zoo"))
options("googleAuthR.webapp.client_id" = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com")
options("googleAuthR.client_secret" = "Gh_SXMEy8ZnMXU1hy6lKSlr6")
#
gar_auth(token = "app.httr-oauth")
gar_auth(token)
gar_auth()
options(googleAuthR.scopes.selected = "https://www.googleapis.com/auth/drive")
options(googleAuthR.scopes.selected = "https://www.googleapis.com/auth/drive")
gar_auth()
voting_url <- as_sheets_id("https://docs.google.com/spreadsheets/d/1Gsr7xmv5PCbvKY7_vTRir6XBJKI4ME7VlAQ5YEVJv7Q/edit#gid=0")
oauth2.0_token(endpoint = oauth_endpoint("google"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.sheets.googleapis.com",
"drive.googleapis.com"
))
runApp()
oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.sheets.googleapis.com",
"drive.googleapis.com"
))
oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.sheets.googleapis.com",
"drive.googleapis.com"
))
oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.sheets.googleapis.com",
"https://www.drive.googleapis.com"
))
oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive"
))
oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/spreadsheets"
))
runApp()
my_oauth_toek <- oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/spreadsheets"
))
sheets_auth(my_oauth_toek)
my_oauth_toek <- oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/spreadsheets"
))
credentials_byo_oauth2(token = my_oauth_toek)
credentials_byo_oauth2(my_oauth_toek)
install.packages("gargle")
install.packages("gargle")
library(gargle)
credentials_byo_oauth2(my_oauth_toek)
credentials_byo_oauth2(token = my_oauth_toek)
my_oauth_toek <- oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/spreadsheets"
))
library(httr)
my_oauth_toek <- oauth2.0_token(endpoint = oauth_endpoint("google", authorize = "https://accounts.google.com/o/oauth2/auth", access = "https://accounts.google.com/o/oauth2/token"),
app = oauth_app(
"google",
key = "896066592625-9b26euhim8plpf9jqn2968mgd6dque1a.apps.googleusercontent.com",
secret = "Gh_SXMEy8ZnMXU1hy6lKSlr6"
),
scope = c(
"https://www.googleapis.com/auth/drive",
"https://www.googleapis.com/auth/spreadsheets"
))
credentials_byo_oauth2(token = my_oauth_toek)
drive_auth()
library(googledrive)
drive_auth()
sheets_auth(token = drive_token())
library(googlesheets4)
sheets_auth(token = drive_token())
shiny::runApp()
options(gargle_oauth_cache= ".secrets")
gargle::gargle_oauth_cache()
drive_auth()
runApp()
options(gargle_oauth_cache= ".secrets")
gargle::gargle_oauth_cache()
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = "nilesguo@gmail.com"
)
runApp('~/CADS/Project2/DCE/P2Vote/P2Vote')
options(gargle_oauth_cache= ".secrets")
gargle::gargle_oauth_cache()
options(
gargle_oauth_cache = ".secrets",
gargle_oauth_email = "nilesguo@gmail.com"
)
runApp('~/CADS/Project2/DCE/P3Vote/P3Vote')
runApp('~/CADS/Project2/DCE/P4Vote/P4Vote')
shiny::runApp()
runApp()
runApp()
library(shiny)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(googleAuthR)
library(googledrive)
library(googlesheets4)
library(shinyjs)
library(shinyWidgets)
library(httr)
library(gargle)
runApp()
runApp()
runApp('~/CADS/Project2/DCE/P2Vote/P2Vote')
runApp('~/CADS/Project2/DCE/P3Vote/P3Vote')
runApp('~/CADS/Project2/DCE/P4Vote/P4Vote')
create.col.nuc <- function(df, n){
varname <- paste0("nuc.power0", n)
mutate(df, !!varname := ifelse(nuc.power0 == n, 1,0))
}
create.col.ban <- function(df, n){
varname <- paste0("ban.fuel.explore0", n)
mutate(df, !!varname := ifelse(ban.fuel.explore0 == n, 1,0))
}
create.col.RFS <- function(df, n){
varname <- paste0("RFS0", n)
mutate(df, !!varname := ifelse(RFS0 == n, 1,0))
}
create.col.nuc1 <- function(df, n){
varname <- paste0("nuc.power1", n)
mutate(df, !!varname := ifelse(nuc.power1 == n, 1,0))
}
create.col.ban1 <- function(df, n){
varname <- paste0("ban.fuel.explore1", n)
mutate(df, !!varname := ifelse(ban.fuel.explore1 == n, 1,0))
}
create.col.RFS1 <- function(df, n){
varname <- paste0("RFS1", n)
mutate(df, !!varname := ifelse(RFS1 == n, 1,0))
}
alt1.test <- fac.design(factor.names = list(nuc.power =c("Keep current nuclear power plants but do not build any new plants.",
"Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.",
"Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years."),
CO2Price = c("0", "30", "60", "90", "120", "150"),
ban.fuel.explore = c("Unregulated access to federal lands and waters for fossil fuel exploration.",
"Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.",
"Fully ban fossil fuel exploration on public lands."),
RFS = c("Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid.")))
alt.left.num.test <- alt1.test%>%
mutate(nuc.power = ifelse(nuc.power == "Keep current nuclear power plants but do not build any new plants.", 0, ifelse(
nuc.power == "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.", 1, 2)
))%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "30", 1, ifelse(
CO2Price == "60", 2, ifelse(
CO2Price =="90", 3, ifelse(
CO2Price == "120", 4, 5
)
)
)
)))%>%
mutate(ban.fuel.explore = ifelse(ban.fuel.explore == "Unregulated access to federal lands and waters for fossil fuel exploration.", 0, ifelse(
ban.fuel.explore == "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.", 1, 2
)))%>%
mutate(RFS = ifelse(RFS == "Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", 0, ifelse(
RFS == "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", 1, 2)))
alt.right.num.test <- alt.left.num.test%>%
mutate(nuc.power = (nuc.power + 1)%%3)%>%
mutate(ban.fuel.explore = (ban.fuel.explore + 1)%%3)%>%
mutate(RFS = (RFS + 1)%%3)%>%
mutate(CO2Price = (CO2Price + 1)%%6)%>%
dplyr::select(nuc.power, CO2Price, ban.fuel.explore, RFS)
alt.left.txt <- alt.left.num.test%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "1", 30, ifelse(
CO2Price == "2", 60, ifelse(
CO2Price =="3", 90, ifelse(
CO2Price =="4", 120, 150
)
)
)
)))%>%
mutate(nuc.power0 = nuc.power)%>%
mutate(CO2Price0 = CO2Price)%>%
mutate(ban.fuel.explore0 = ban.fuel.explore)%>%
mutate(RFS0 = RFS)%>%
dplyr::select(nuc.power0, CO2Price0, ban.fuel.explore0, RFS0)
alt.right.txt <- alt.right.num.test%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "1", 30, ifelse(
CO2Price == "2", 60, ifelse(
CO2Price =="3", 90, ifelse(
CO2Price =="4", 120, 150
)
)
)
)))%>%
mutate(nuc.power1 = nuc.power)%>%
mutate(CO2Price1 = CO2Price)%>%
mutate(ban.fuel.explore1 = ban.fuel.explore)%>%
mutate(RFS1 = RFS)%>%
dplyr::select(nuc.power1, CO2Price1, ban.fuel.explore1, RFS1)
total.design.test <- cbind(alt.left.txt, alt.right.txt)
total.design.test.1 <- total.design.test%>%
create.col.nuc(1)%>%
create.col.nuc(2)%>%
create.col.ban(1)%>%
create.col.ban(2)%>%
create.col.RFS(1)%>%
create.col.RFS(2)%>%
create.col.nuc1(1)%>%
create.col.nuc1(2)%>%
create.col.ban1(1)%>%
create.col.ban1(2)%>%
create.col.RFS1(1)%>%
create.col.RFS1(2)%>%
dplyr::select(nuc.power01, nuc.power02, CO2Price0, ban.fuel.explore01, ban.fuel.explore02, RFS01, RFS02, nuc.power11, nuc.power12, CO2Price1, ban.fuel.explore11, ban.fuel.explore12, RFS11, RFS12)
ut.matrix <- total.design.test.1%>%
dplyr::select(nuc.power01, nuc.power02, CO2Price0, ban.fuel.explore01, ban.fuel.explore02, RFS01, RFS02)%>%
mutate(id = rep(1:nrow(total.design.test.1)))
colnames(ut.matrix) <- c("nuc.power1", "nuc.power2", "CO2Price", "ban.fuel.explore1", "ban.fuel.explore2", "RFS1", "RFS2", "id")
utility.matrix <- as.matrix(total.design.test.1[,1:7] - total.design.test.1[,8:14])
colnames(utility.matrix) <- c("nuc.power1", "nuc.power2", "CO2Price", "ban.fuel.explore1", "ban.fuel.explore2", "RFS1", "RFS2")
left.alternatives <- as_sheets_id("https://docs.google.com/spreadsheets/d/1oeiXzpyQYqc6AFSn_pjs4RAgvfq1YFwhMcyes1bItto/edit#gid=0")
right.alternatives <- as_sheets_id("https://docs.google.com/spreadsheets/d/1Etda1ouNUfmLMFTGMBHDgj6fMImDKbHDs7jn0TaEiRM/edit#gid=0")
voting <- as_sheets_id("https://docs.google.com/spreadsheets/d/1Gsr7xmv5PCbvKY7_vTRir6XBJKI4ME7VlAQ5YEVJv7Q/edit#gid=0")
final.recommendation <- as_sheets_id("https://docs.google.com/spreadsheets/d/1QlypWKlVGIHDKg8BSBAuwOSKA6QpmaEvMW_tBzC-keE/edit#gid=0")
predictedprob <- as_sheets_id("https://docs.google.com/spreadsheets/d/1M0YFUoZzQcgF_wbsFDxK3JMoCcN7jotyuu5-1RJQE6s/edit#gid=0")
create.col.nuc <- function(df, n){
varname <- paste0("nuc.power0", n)
mutate(df, !!varname := ifelse(nuc.power0 == n, 1,0))
}
create.col.ban <- function(df, n){
varname <- paste0("ban.fuel.explore0", n)
mutate(df, !!varname := ifelse(ban.fuel.explore0 == n, 1,0))
}
create.col.RFS <- function(df, n){
varname <- paste0("RFS0", n)
mutate(df, !!varname := ifelse(RFS0 == n, 1,0))
}
create.col.nuc1 <- function(df, n){
varname <- paste0("nuc.power1", n)
mutate(df, !!varname := ifelse(nuc.power1 == n, 1,0))
}
create.col.ban1 <- function(df, n){
varname <- paste0("ban.fuel.explore1", n)
mutate(df, !!varname := ifelse(ban.fuel.explore1 == n, 1,0))
}
create.col.RFS1 <- function(df, n){
varname <- paste0("RFS1", n)
mutate(df, !!varname := ifelse(RFS1 == n, 1,0))
}
alt1.test <- fac.design(factor.names = list(nuc.power =c("Keep current nuclear power plants but do not build any new plants.",
"Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.",
"Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years."),
CO2Price = c("0", "30", "60", "90", "120", "150"),
ban.fuel.explore = c("Unregulated access to federal lands and waters for fossil fuel exploration.",
"Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.",
"Fully ban fossil fuel exploration on public lands."),
RFS = c("Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid.")))
library(shiny)
library(shinydashboard)
library(dplyr)
library(tidyr)
library(googleAuthR)
library(googledrive)
library(googlesheets4)
library(shinyjs)
library(lubridate)
library(rstanarm)
library(mlogit)
library(Hmisc)
library(survival)
library(DoE.base)
library(DoE.wrapper)
library(Metrics)
library(mgcv)
library(support.CEs)
library(mlmRev)
library(lme4)
library(rlist)
library(Matrix)
library(matrixStats)
library(pROC)
alt1.test <- fac.design(factor.names = list(nuc.power =c("Keep current nuclear power plants but do not build any new plants.",
"Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.",
"Shut down nuclear power plants that are not making money, reducing nuclear power by 14-29% than today. Do not build nuclear plants in the next eight years."),
CO2Price = c("0", "30", "60", "90", "120", "150"),
ban.fuel.explore = c("Unregulated access to federal lands and waters for fossil fuel exploration.",
"Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.",
"Fully ban fossil fuel exploration on public lands."),
RFS = c("Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.",
"Starting from 2021, reach 100% clean energy by 2035 with a yearly increase of 7.5% of clean energy in the grid.")))
alt.left.num.test <- alt1.test%>%
mutate(nuc.power = ifelse(nuc.power == "Keep current nuclear power plants but do not build any new plants.", 0, ifelse(
nuc.power == "Keep current nuclear power plants and provide money to increase nuclear power by 14% over the next eight years.", 1, 2)
))%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "30", 1, ifelse(
CO2Price == "60", 2, ifelse(
CO2Price =="90", 3, ifelse(
CO2Price == "120", 4, 5
)
)
)
)))%>%
mutate(ban.fuel.explore = ifelse(ban.fuel.explore == "Unregulated access to federal lands and waters for fossil fuel exploration.", 0, ifelse(
ban.fuel.explore == "Tighter fracking regulation on public lands that increases storage safety standards and transparency of what chemicals are used.", 1, 2
)))%>%
mutate(RFS = ifelse(RFS == "Starting from 2021, reach 100% clean energy by 2100 with a yearly increase of 1.3% of clean energy in the grid.", 0, ifelse(
RFS == "Starting from 2021, reach 100% clean energy by 2050 with a yearly increase of 3.5% of clean energy in the grid.", 1, 2)))
alt.right.num.test <- alt.left.num.test%>%
mutate(nuc.power = (nuc.power + 1)%%3)%>%
mutate(ban.fuel.explore = (ban.fuel.explore + 1)%%3)%>%
mutate(RFS = (RFS + 1)%%3)%>%
mutate(CO2Price = (CO2Price + 1)%%6)%>%
dplyr::select(nuc.power, CO2Price, ban.fuel.explore, RFS)
alt.left.txt <- alt.left.num.test%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "1", 30, ifelse(
CO2Price == "2", 60, ifelse(
CO2Price =="3", 90, ifelse(
CO2Price =="4", 120, 150
)
)
)
)))%>%
mutate(nuc.power0 = nuc.power)%>%
mutate(CO2Price0 = CO2Price)%>%
mutate(ban.fuel.explore0 = ban.fuel.explore)%>%
mutate(RFS0 = RFS)%>%
dplyr::select(nuc.power0, CO2Price0, ban.fuel.explore0, RFS0)
alt.right.txt <- alt.right.num.test%>%
mutate(CO2Price = ifelse(CO2Price == "0", 0, ifelse(
CO2Price == "1", 30, ifelse(
CO2Price == "2", 60, ifelse(
CO2Price =="3", 90, ifelse(
CO2Price =="4", 120, 150
)
)
)
)))%>%
mutate(nuc.power1 = nuc.power)%>%
mutate(CO2Price1 = CO2Price)%>%
mutate(ban.fuel.explore1 = ban.fuel.explore)%>%
mutate(RFS1 = RFS)%>%
dplyr::select(nuc.power1, CO2Price1, ban.fuel.explore1, RFS1)
total.design.test <- cbind(alt.left.txt, alt.right.txt)
total.design.test.1 <- total.design.test%>%
create.col.nuc(1)%>%
create.col.nuc(2)%>%
create.col.ban(1)%>%
create.col.ban(2)%>%
create.col.RFS(1)%>%
create.col.RFS(2)%>%
create.col.nuc1(1)%>%
create.col.nuc1(2)%>%
create.col.ban1(1)%>%
create.col.ban1(2)%>%
create.col.RFS1(1)%>%
create.col.RFS1(2)%>%
dplyr::select(nuc.power01, nuc.power02, CO2Price0, ban.fuel.explore01, ban.fuel.explore02, RFS01, RFS02, nuc.power11, nuc.power12, CO2Price1, ban.fuel.explore11, ban.fuel.explore12, RFS11, RFS12)
ut.matrix <- total.design.test.1%>%
dplyr::select(nuc.power01, nuc.power02, CO2Price0, ban.fuel.explore01, ban.fuel.explore02, RFS01, RFS02)%>%
mutate(id = rep(1:nrow(total.design.test.1)))
colnames(ut.matrix) <- c("nuc.power1", "nuc.power2", "CO2Price", "ban.fuel.explore1", "ban.fuel.explore2", "RFS1", "RFS2", "id")
utility.matrix <- as.matrix(total.design.test.1[,1:7] - total.design.test.1[,8:14])
colnames(utility.matrix) <- c("nuc.power1", "nuc.power2", "CO2Price", "ban.fuel.explore1", "ban.fuel.explore2", "RFS1", "RFS2")
View(file:///C:/Users/Niles/Documents/CADS/Project2/DCE/Suggestion)
View(utility.matrix)
alt.test <- readxl::read_xlsx("master_list.xlsx")
alt.test <- readxl::read_xlsx("master_list.xlsx")
alt.test <- readxl::read_excel("master_list.xlsx", sheet = 1)
shiny::runApp()
runApp('~/CADS/Project2/DCE/P2Vote/P2Vote')
